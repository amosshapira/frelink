#!/bin/bash

set -u
set -e

if [[ `id -u` != "0" ]]; then
	echo >&2 "This script should be run as root!"
	exit 33
fi


# Cleanup function for robustness
cleanup()
{
	if grep frelink /proc/modules; then
		rmmod frelink.ko
	fi
}
trap cleanup 0


# Standardized fail function
fail()
{
	echo >&2 "Test $1: fail"
	exit 34
}

# Standardized pass function
pass()
{
	echo >&2 "Test $1: pass"
}


#Test 1: If run with no arguments, frelink should exit normally
test1()
{
	if ! ./frelink; then
		fail 1
	else
		pass 1
	fi
}

# Test 2: The module should be able to be insmodded/rmmoded
#         with no ill effects. (look at dmesg)
test2()
{
	if ! insmod frelink.ko; then
		fail 2
	fi
	if ! rmmod frelink.ko; then
		fail 2
	else
		pass 2 
	fi
}


# Test 3: When the module is loaded, /proc/frelink should appear
#         and disappear when it is unloaded.
test3()
{
	insmod frelink.ko
	if [ -r /proc/frelink ]; then
		pass 3.1
	else
		fail 3.1
	fi

	rmmod frelink.ko
	if [ -r /proc/frelink ]; then
		fail 3.2
	else
		pass 3.2
	fi
}


# Test 4: Test ioctl connection between userspace and kernel
test4()
{
	insmod frelink.ko
	if ! ./frelink --test-ioctl; then
		fail 4
	else
		pass 4
	fi
	rmmod frelink.ko
}


# Actually run the tests (easy to activate / deactivate)
test1
test2
test3
test4
